{"version":3,"file":"index.js","sources":["js/tools/events.js","js/tools/stream.js","js/tools/tools.js","js/tools/load.js","js/types/loadTypes.js","js/tools/listen.js","js/types/listenTypes.js","js/types/types.js","js/main.js"],"sourcesContent":["const events = (() => {\n  const topics = {}\n  const on = (topic, action) => {\n    if (!topics.hasOwnProperty(topic)) topics[topic] = []\n    const index = topics[topic].push(action) - 1\n    const remove = () =>\n      topics[topic][index] = null\n    return { remove }\n  }\n  const publish = (topic, data) => {\n    if (!topics.hasOwnProperty(topic)) return false\n    return topics[topic].reduce((result, action) => {\n      if (action) result.push(action(data))\n      return result\n    }, [])\n  }\n  return {\n    on,\n    publish\n  }\n})()\n\nexport const \n  on = events.on,\n  publish = events.publish\n\nexport default events","import { on, publish } from './events'\n\nconst stream = (...fns) => (state = {}) => {\n  let i = 0\n  let output = state\n  do {\n    let input = output\n    output = fns[i](input)\n    i = i + 1\n  } while (typeof output !== 'string' && i < fns.length)\n\n  if (typeof output === 'string') {\n    const event = output\n    /**\n     * if listen is not last, then prepare call of \n     * another stream with remaining functions when event publishes\n     */\n    if (i < fns.length) {\n      return on(event, stream(...fns.slice(i)))\n    /**\n     * else return string which is important for parent stream (listen this stream)\n     */\n    } else {\n      return event\n    }\n  }\n  return output\n}\n\nexport default stream","const pipe = (...fns) => x => fns.reduce((v, f) => f(v), x)\n\nconst el = name => document.getElementById(name)\n\nconst els = name => document.getElementsByClassName(name)\n\nconst setDom = input => document.getElementById('js-main').innerHTML = input\n\nconst read = id => document.getElementById(id).innerHTML\n\nconst compile = Handlebars.compile\n\nconst when = (bool, action) => state => bool(state) && action(state)\n\nexport { \n  pipe,\n  el,\n  els,\n  setDom,\n  read,\n  compile,\n  when\n}","import { pipe, read, compile, setDom } from './tools'\n\nconst load = id => {\n  const insert = pipe(\n    read,\n    compile\n  )(id)\n  return {\n    with: data => {\n      setDom(insert(data))\n      return data\n    }\n  }\n}\n\nexport default load","import load from '../tools/load'\n\nconst loadTypes = state => {\n  load(state.loadTypes.id).with(state.loadTypes.data)\n  return state\n}\n\nexport default loadTypes","const listen = ({ container = null, part = null, target = null }) => {\n  const then = action => {\n    if (target && !container && !part) {\n      const element = document.getElementById(target)\n      element.addEventListener('click', ({ target }) => action(target))\n\n    } else if (container && part && !target) {\n      const outer = document.getElementById(container)\n      outer.addEventListener('click', ({ target }) => {\n        const array = [target, target.parentNode]\n          .filter(el => el.classList.contains(part))\n        if (array.length) return action(array[0])\n      })\n    } else {\n      return false\n    }\n\n    return true\n  }\n\n  return { then }\n}\n\nexport default listen","import listen from '../tools/listen'\nimport { publish } from '../tools/events'\n\nconst listenTypes = state => {\n  const types = state.loadTypes.data.types\n  const names = state.listenTypes.names\n\n  listen({ container: 'js-types', part: 'js-option' })\n    .then(clicked => {\n      const { index } = clicked.dataset\n      const newState = Object.assign({}, state)\n      const players = newState.loadMarks.data.players\n      players[0].name = names[index][0]\n      players[1].name = names[index][1]\n      publish('typeDone', newState)\n    })\n\n  return 'typeDone'\n}\n\nexport default listenTypes","import stream from '../tools/stream'\nimport loadTypes from './loadTypes'\nimport listenTypes from './listenTypes'\n\nconst types = stream(\n  loadTypes,\n  listenTypes\n)\n\nexport default types","import state from './state.json'\nimport stream from './tools/stream'\nimport types from './types/types'\n// import marks from './marks/marks'\n// import game from './game/game'\n\nstream(\n  types,\n  x => console.log('v√Ωstup: ', x)\n  // marks,\n  // game\n)(state)\n"],"names":[],"mappings":"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"}